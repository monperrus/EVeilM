from opcodes.opcodes import *

opcodes_dict = {
    "00": STOP,
    "01": ADD,
    "02": MUL,
    "03": SUB,
    "04": DIV,
    "05": SDIV,
    "06": MOD,
    "07": SMOD,
    "08": ADDMOD,
    "09": MULMOD,
    "0a": EXP,
    "0b": SIGNEXTEND,
    "10": LT,
    "11": GT,
    "12": SLT,
    "13": SGT,
    "14": EQ,
    "15": ISZERO,
    "16": AND,
    "17": OR,
    "18": XOR,
    "19": NOT,
    "1a": BYTE,
    "1b": SHL,
    "1c": SHR,
    "1d": SAR,
    "20": KECCAK256,
    "30": ADDRESS,
    "31": BALANCE,
    "32": ORIGIN,
    "33": CALLER,
    "34": CALLVALUE,
    "35": CALLDATALOAD,
    "36": CALLDATASIZE,
    "37": CALLDATACOPY,
    "38": CODESIZE,
    "39": CODECOPY,
    "3a": GASPRICE,
    "3b": EXTCODESIZE,
    "3c": EXTCODECOPY,
    "3d": RETURNDATASIZE,
    "3e": RETURNDATACOPY,
    "3f": EXTCODEHASH,
    "40": BLOCKHASH,
    "41": COINBASE,
    "42": TIMESTAMP,
    "43": NUMBER,
    "44": DIFFICULTY,
    "45": GASLIMIT,
    "46": CHAINID,
    "47": SELFBALANCE,
    "48": BASEFEE,
    "50": POP,
    "51": MLOAD,
    "52": MSTORE,
    "53": MSTORE8,
    "54": SLOAD,
    "55": SSTORE,
    "56": JUMP,
    "57": JUMPI,
    "58": PC,
    "59": MSIZE,
    "5a": GAS,
    "5b": JUMPDEST,
    "60": PUSH,
    "61": PUSH,
    "62": PUSH,
    "63": PUSH,
    "64": PUSH,
    "65": PUSH,
    "66": PUSH,
    "67": PUSH,
    "68": PUSH,
    "69": PUSH,
    "6a": PUSH,
    "6b": PUSH,
    "6c": PUSH,
    "6d": PUSH,
    "6e": PUSH,
    "6f": PUSH,
    "70": PUSH,
    "71": PUSH,
    "72": PUSH,
    "73": PUSH,
    "74": PUSH,
    "75": PUSH,
    "76": PUSH,
    "77": PUSH,
    "78": PUSH,
    "79": PUSH,
    "7a": PUSH,
    "7b": PUSH,
    "7c": PUSH,
    "7d": PUSH,
    "7e": PUSH,
    "7f": PUSH,
    "80": DUP,
    "81": DUP,
    "82": DUP,
    "83": DUP,
    "84": DUP,
    "85": DUP,
    "86": DUP,
    "87": DUP,
    "88": DUP,
    "89": DUP,
    "8a": DUP,
    "8b": DUP,
    "8c": DUP,
    "8d": DUP,
    "8e": DUP,
    "8f": DUP,
    "90": SWAP,
    "91": SWAP,
    "92": SWAP,
    "93": SWAP,
    "94": SWAP,
    "95": SWAP,
    "96": SWAP,
    "97": SWAP,
    "98": SWAP,
    "99": SWAP,
    "9a": SWAP,
    "9b": SWAP,
    "9c": SWAP,
    "9d": SWAP,
    "9e": SWAP,
    "9f": SWAP,
    "a0": LOG,
    "a1": LOG,
    "a2": LOG,
    "a3": LOG,
    "a4": LOG,
    "f0": CREATE,
    "f1": CALL,
    "f2": CALLCODE,
    "f3": RETURN,
    "f4": DELEGATECALL,
    "f5": CREATE2,
    "fa": STATICCALL,
    "fd": REVERT,
    "fe": INVALID,
    "ff": SELFDESTRUCT,
}

#add invalid value to dict
#add 0x01 to make the range from go from (a) to (b) and not (a) to (b-1)
for i in range(0x0c,0x0f + 0x01):
    opcodes_dict["0"+hex(i)[2:]]=INVALID #add "0" to "" to make it 0x0c or its only "c"

for i in range(0x1e,0x1f + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID

for i in range(0x21,0x2F + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID

for i in range(0x49,0x4f + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID

for i in range(0x5c,0x5f + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID

for i in range(0xa5,0xef + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID

for i in range(0xf6,0xf9 + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID

for i in range(0xfb,0xfc + 0x01):
    opcodes_dict[hex(i)[2:]]=INVALID